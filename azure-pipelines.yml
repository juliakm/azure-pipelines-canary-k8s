trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: azure-pipelines-canary-k8s
  dockerRegistryServiceConnection: azure-pipelines-canary-acr
  imageRepository: 'azure-pipelines-canary-k8s'
  containerRegistry: kubernetessept4.azurecr.io
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: app/Dockerfile
        tags: |
          $(tag)
    - task: HelmInstaller@1
      displayName: Install Helm
      inputs:
        helmVersionToInstall: 'latest'
    - task: Kubernetes@1
      displayName: Set up Kubernetes context
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'azure-pipelines-canary-sc'
        azureResourceGroup: 'kubernetes-testing'
        kubernetesCluster: 'myAKSClustersept3'
        namespace: 'default'
        command: 'set'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    - script: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm install prometheus-operator prometheus-community/kube-prometheus-stack
      displayName: Install Prometheus Operator
          
    - publish: manifests
      artifact: manifests

    - publish: misc
      artifact: misc

- stage: DeployCanary
  displayName: Deploy canary
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploycanary
    displayName: Deploy canary
    pool:
      vmImage: ubuntu-latest
    environment: 'akscanary'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@1
            inputs:
              action: 'createSecret'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'azure-pipelines-canary-sc'
              azureResourceGroup: 'kubernetes-testing'
              kubernetesCluster: 'myAKSClustersept3'
              secretType: 'dockerRegistry'
              secretName: 'my-acr-secret'
              dockerRegistryEndpoint: 'azure-pipelines-canary-acr'
          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'azure-pipelines-canary-sc'
              azureResourceGroup: 'kubernetes-testing'
              kubernetesCluster: 'myAKSClustersept3'
              strategy: 'canary'
              percentage: '25'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: 'azure-pipelines-canary-k8s'
          - task: KubernetesManifest@1
            displayName: Deploy Forbio and ServiceMonitor
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'azure-pipelines-canary-sc'
              azureResourceGroup: 'kubernetes-testing'
              kubernetesCluster: 'myAKSClustersept3'
              manifests: '$(Pipeline.Workspace)/misc/*'